name: Dev Release

on:
  push:
    branches:
      - main
      
env:
  draft: false
  channel: dev

jobs:
  dev-release:
    permissions: write-all
    name: Dev Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3

      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Install dependencies
        run: npm install

      - name: Build files
        run: npm run build

      - name: Build tarballs
        run: npm run pack

      - name: Get commit hash
        id: short-sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Rename tarballs
        run: |
          for file in ./dist/*.tar.gz; do
            new_file=$(echo "$file" | sed "s/-$SHORT_SHA//")
            mv "$file" "$new_file"
            echo "$file -> $new_file"
          done

      - name: Convert Windows release to .zip
        run: |
          for file in ./dist/*win32*.tar.gz; do
            # Create the extracted directory
            mkdir -p ./dist/extracted

            # Extract the contents of the .tar.gz file into ./dist/extracted
            tar -xzf "$file" -C ./dist/extracted

            # Get the base name without the .tar.gz extension
            base_name=$(basename "$file" .tar.gz)

            # Ensure there are extracted files before zipping
            if [ "$(ls -A ./dist/extracted)" ]; then
              # Create a .zip file from the extracted contents
              zip -r "./dist/${base_name}.zip" ./dist/extracted
              echo "Created zip: ./dist/${base_name}.zip"

              # Remove the original .tar.gz file
              rm "$file"
              echo "Removed $file"

              # Clean up the extracted folder
              rm -rf ./dist/extracted/*
            else
              echo "No files extracted from $file. Skipping zip creation."
            fi
          done


      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          draft: ${{ env.draft }}
          files: |
            ./dist/*.tar.gz   # Keep Linux and Darwin tar.gz files
            ./dist/*.zip      # Add all created zip files (converted for win32)
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
